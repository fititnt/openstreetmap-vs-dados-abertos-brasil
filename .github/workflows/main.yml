# WORKING DRAFT; not full implemented

name: main

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

env:
  TERM: xterm-color

jobs:
  main:
    runs-on: ubuntu-latest
    # runs-on: ubuntu-20.04
    continue-on-error: true
    steps:
      # @see https://github.com/actions/checkout
      - uses: actions/checkout@v3

      # @see https://github.com/actions/setup-python
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
          cache: 'pip'

      #### setup-lua ___________________________________________________________
      # @see https://github.com/xpol/setup-lua
      # - uses: xpol/setup-lua@v1
      - name: instala Lua (prova de conceito para o Fidelis)
        uses: xpol/setup-lua@v0.3

      #### cache heavy files ___________________________________________________
      # @see https://docs.github.com/en/enterprise-server@3.5/actions/using-workflows/caching-dependencies-to-speed-up-workflows

      - name: cache data/cache/brasil.osm.pbf
        uses: actions/cache@v3
        env:
          cache-name: data/cache/brasil.osm.pbf
        with:
          path: data/cache/brasil.osm.pbf
          # key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          key: cache-osm-max7-days
          enableCrossOsArchive: true

      # @TODO baixar arquivo
      # curl -o data/cache/brasil.osm.pbf https://download.geofabrik.de/south-america/brazil-latest.osm.pbf

      - name: cache data/cache/BR_municipio.zip
        uses: actions/cache@v3
        env:
          cache-name: data/cache/BR_municipio.zip
        with:
          path: data/cache/BR_municipio.zip
          key: cache-ibge-max7-days
          enableCrossOsArchive: true

      - name: cache data/cache/BR_UF.zip
        # id: data/cache/BR_UF.zip
        uses: actions/cache@v3
        env:
          cache-name: data/cache/BR_UF.zip
        with:
          path: data/cache/BR_UF.zip
          key: cache-ibge-max7-days
          enableCrossOsArchive: true

      # - name: cache-ibge
      #   id: cache-ibge
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       data/cache/ibge

      # - name: cache-osm
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       data/cache/osm

      #### Setup GDAL install __________________________________________________
      # NOTE: Ubuntu tends to have acceptable okay version of GDAL
      #       so let's try first use the default ones
      # @see https://launchpad.net/~ubuntugis/+archive/ubuntu/ppa
      # - run: sudo add-apt-repository ppa:ubuntugis/ppa
      #   continue-on-error: true
      # - run: sudo apt update
      #   continue-on-error: true
      - run: sudo apt-get install gdal-bin
        continue-on-error: true

      #### osmium  ____________________________________________________________
      # @see https://osmcode.org/osmium-tool/
      - run: sudo apt install osmium-tool
        continue-on-error: true

      - run: sudo apt install tree
        continue-on-error: true

      #### etc ________________________________________________________________
      - run: tree data
        continue-on-error: true

      #### main ________________________________________________________________
      - run: pip install -r requirements.txt

      # ## cache tests
      # - if: ${{ steps.cache-ibge.outputs.cache-hit != 'true' }}
      #   name: cache-ibge A
      #   continue-on-error: true
      #   run: tree

      # - if: ${{ steps.cache-ibge.outputs.cache-hit == 'true' }}
      #   name: cache-ibge B
      #   continue-on-error: true
      #   run: tree

      # - run: sudo apt install osmium-tool
      #   continue-on-error: true

      #### Download external data _______________________________________________
      - run: bash ./scripts/setup.sh
        continue-on-error: true

      - name: prova de conceito para rodar script Lua pro Fidelis
        run: lua ./scripts/etc/salve_mundi.lua
        continue-on-error: true

      #### GitHub Pages, prepare ________________________________________________
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job ============================================================
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: main
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

### temp
# https://gis.stackexchange.com/questions/370736/installing-gdal-on-ubuntu-20-04-unmet-dependencies
# https://launchpad.net/~ubuntugis/+archive/ubuntu/ppa